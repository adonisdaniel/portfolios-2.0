---
interface Props {
  title: string;
  description: string;
  techs: string[];
}

const { title, description, techs } = Astro.props;
---

<div
  class="max-w-sm rounded-lg hover:rounded-none shadow bg-gray-800 group justify-self-center"
  data-grid-card>
  <div class="p-5 rounded-lg" data-card-title>
    <h5
      class="mb-2 text-2xl font-bold tracking-tight text-white group-hover:underline group-hover:decoration-wavy underline-offset-8 decoration-emerald-100">
      {title}
    </h5>
  </div>
  <div class="p-5 rounded-lg" data-card-info>
    <p class="mb-4 text-white text-base">
      {description}
    </p>
    <div class="mb-2">
      {
        techs.length &&
          techs.map((tech) => (
            <span class="text-xs mr-2 px-2.5 py-0.5 rounded-full bg-emerald-950 text-emerald-100">
              {tech}
            </span>
          ))
      }
    </div>
    <button
      type="button"
      class="text-white bg-gradient-to-r from-emerald-500 via-emerald-600 to-emerald-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-emerald-800 shadow-lg shadow-emerald-800/80 font-medium rounded-lg text-xs px-2.5 py-0.5 text-center mr-2"
      >Ver</button
    >
  </div>
</div>

<style>
  <style > .description {
    display: none;
  }

  [data-grid-card] {
    background-color: rgb(45 45 45 / 52%);
    background-image: url("/logo.png");
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
    background-blend-mode: screen;
    height: 20rem;
    display: grid;
    align-items: end;
    grid-template-rows: 100%;
    transition: 0.2s;
    overflow: hidden;
  }

  [data-grid-card]:hover {
    background-size: 150%;
    grid-template-rows: 40% 60%;
    align-items: end;
    overflow: visible;
  }

  [data-grid-card]:hover [data-card-title] {
    align-self: center;
  }

  [data-grid-card]:hover [data-card-info] {
    background-color: #020617;
    transform: translate(2rem, 0.5rem);
    border-radius: initial;
    width: 120%;
  }
</style>
